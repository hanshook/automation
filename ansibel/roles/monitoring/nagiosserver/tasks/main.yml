#https://www.rosehosting.com/blog/how-to-install-nagios-4-and-monitor-your-servers-on-ubuntu-20-04/
#https://www.howtoforge.com/tutorial/how-to-install-nagios-on-ubuntu-2004/

# Script based Nagios server installion
# For some (strange) reason this works while ansible based installation fails 

- name: Ensure '/opt/sbdi/utils/bin' folder
  file: 
    path: /opt/sbdi/utils/bin
    owner: root 
    group: root
    mode: 0755 
    state: directory
  become: yes    
    
- name: Install Nagios server install script
  copy:
    src: install_nagios_server.sh
    dest: /opt/sbdi/utils/bin/install_nagios_server.sh
    owner: root
    group: root
    mode: '0755'
  become: yes    

- name: Run Nagios server installation script
  command: "/opt/sbdi/utils/bin/install_nagios_server.sh -port {{ nagios_server_port }}"
  become: yes    

# Ansible style Nagios server instalation (not working):

# - name: Install requried packages
#   apt:
#     name: "{{ item }}"
#     state: present
#     install_recommends: no
#   with_items:
#     - unzip
#     - openssl
#     - build-essential
#     - libgd-dev
#     - libssl-dev
#     - libapache2-mod-php
#     - php-gd
#     - php
#     - apache2
#     - autoconf
#     - bc
#     - gawk
#     - dc
#     - gcc
#     - libc6
#     - make
#     - wget
#     - libmcrypt-dev
#     - snmp
#     - libnet-snmp-perl
#     - gettext
#   become: yes

    
# - name: Download Nagios Core
#   get_url:
# #    url: "https://github.com/NagiosEnterprises/nagioscore/releases/download/nagios-{{ nagios_core_version }}/nagios-{{ nagios_core_version }}.tar.gz"
#     url: "https://assets.nagios.com/downloads/nagioscore/releases/nagios-{{ nagios_core_version }}.tar.gz"
#     dest: /tmp/
#     timeout: 30
   
# - name: Unzip Nagios Core Tarball
#   ansible.builtin.unarchive:
#     src: "/tmp/nagios-{{ nagios_core_version }}.tar.gz"
#     dest: /tmp
#     remote_src: yes

# - name: Running ./configure 
#   command:
#     cmd: "./configure --with-httpd-conf=/etc/apache2/sites-enabled" 
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
    
# - name: Run 'make all' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: all
  
# - name: Run 'make install-groups-users' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: install-groups-users
#   become: yes
  
# - name: Add user'www-data' to group 'nagios'
#   user:
#     name: www-data
#     groups: nagios
#     append: yes
#   become: yes
  
# - name: Run 'make install' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: install
#   become: yes
  
# - name: Run 'make install-daemoninit' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: install-daemoninit
#   become: yes

# - name: Run 'make install-commandmode' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: install-commandmode
#   become: yes

# - name: Run 'make install-config' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: install-config
#   become: yes

# - name: Remove '/etc/apache2/sites-enabled/nagios.conf' if present
#   file:
#     path: /etc/apache2/sites-enabled/nagios.conf
#     state: absent

# - name: Run 'make install-webconf' target as root
#   community.general.make:
#     chdir: "/tmp/nagios-{{ nagios_core_version }}"
#     target: install-webconf
#   become: yes

# - name: Enable the Apache2 module 'rewrite'
#   community.general.apache2_module:
#     state: present
#     name: rewrite
#   become: yes
    
# - name: Enable the Apache2 module 'cgid'
#   community.general.apache2_module:
#     state: present
#     name: cgid
#   become: yes

# - name: Restart service Apache2
#   ansible.builtin.service:
#     name: apache2
#     state: restarted
#   become: yes

# # - name: Run 'make install-exfoliation' target as root
# #   community.general.make:
# #     chdir: "/tmp/nagios-{{ nagios_core_version }}"
# #     target: install-exfoliation
# #   become: yes

# - name: add nagios password
#   command: "htpasswd -bc /usr/local/nagios/etc/htpasswd.users nagiosadmin {{ nagiosadmin_pw }}"
#   become: yes

# - name: Install 'nagios-nrpe-plugin'
#   apt:
#     name: "{{ item }}"
#     state: present
#     install_recommends: no
#   with_items:
#     - monitoring-plugins
#     - nagios-nrpe-plugin
#   become: yes

# - name: Ensure '/usr/local/nagios/etc/servers' directory
#   file:
#     path: /usr/local/nagios/etc/servers
#     state: directory
#     owner: nagios
#     group: nagios
#     mode: 0775
#   become: yes

# - name: Ensure 'cfg_dir=/usr/local/nagios/etc/servers' in 'nagios.cfg
#   ansible.builtin.lineinfile:
#     path: /usr/local/nagios/etc/nagios.cfg
#     regexp: 'cfg_dir=/usr/local/nagios/etc/servers'
#     line: cfg_dir=/usr/local/nagios/etc/servers
#   become: yes  
  
# - name: Ensure '$USER1$=/usr/lib/nagios/plugins' in 'resource.cfg
#   ansible.builtin.lineinfile:
#     path: /usr/local/nagios/etc/resource.cfg
#     regexp: '\$USER1\$='
#     line: $USER1$=/usr/lib/nagios/plugins

# # - name: Ensure 'cfg_dir=/usr/local/nagios/etc/conf.d' in 'nagios.cfg
# #   ansible.builtin.lineinfile:
# #     path: /usr/local/nagios/etc/nagios.cfg
# #     insertafter: 'cfg_dir='
# #     line: cfg_dir=/usr/local/nagios/etc/conf.d
# #   become: yes
  
# # - name: create '/usr/local/nagios/etc/conf.d' directory
# #   file:
# #     path: /usr/local/nagios/etc/conf.d
# #     state: directory
# #     owner: nagios
# #     group: nagios
# #     mode: 0775
# #   become: yes
  
# - name: copy nagios configuration
#   template:
#     src: "{{ item }}"
#     dest: /usr/local/nagios/etc/objects/{{ item }}
#     owner: nagios
#     group: nagios
#     mode: 0664
#   with_items:
#     - contacts.cfg
#     - commands.cfg
#   become: yes
  
# - name: verify nagios configuration
#   command: /usr/local/nagios/bin/nagios -v /usr/local/nagios/etc/nagios.cfg
#   become: yes
  
# - name: Enable and start service 'nagios'
#   ansible.builtin.service:
#     name: nagios
#     enabled: yes
#     state: started
#   become: yes
  
# - name: Restart service Apache2
#   ansible.builtin.service:
#     name: apache2
#     state: restarted
#   become: yes
  
#  # - name: copy nagios slack notify scripts
#  #  copy:
#  #    src: "{{ item }}"
#  #    dest: /usr/local/bin/{{ item }}
#  #    owner: root
#  #    group: root
#  #    mode: 0755
#  #  with_items:
#  #    - slack_nagios.sh
#  #    - slack_nagios.pl
#  #  notify:
#  #    - restart nagios

